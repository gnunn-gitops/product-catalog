apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: push-prod-pr
spec:
  workspaces:
    - name: git-source
  params:
    - name: git_revision
      type: string
      default: main
    - name: git_url
      type: string
      default: https://github.com/gnunn-gitops/product-catalog
    - name: image_dest_url
      type: string
      description: External registry location of image to push without tag
    - name: image_dest_tag
      type: string
      description: Tag of image to push to production
    - name: cluster
      type: string
      description: Cluster to push to
    - name: app
      type: string
      description: Either 'server' or 'client'
    - name: sonarqube_host
      type: string
      description: Hostname for sonarqube
      default: sonarqube-dev-tools.apps.home.ocplab.com
    - name: acs_image_scan_results
      description: URL to view the ACS image scan results
      default: none
  tasks:
    - name: clone
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: git-source
      params:
        - name: url
          value: "$(params.git_url)"
        - name: revision
          value: "$(params.git_revision)"
        - name: deleteExisting
          value: "true"
    - name: branch
      taskRef:
        name: git
      runAfter:
        - clone
      workspaces:
        - name: source
          workspace: git-source
      params:
        - name: commands
          value: |
            git checkout -b push-$(params.image_dest_tag)
    - name: patch
      taskRef:
        name: kustomize
      params:
        - name: image-name
          value: "$(params.image_dest_url)"
        - name: new-image
          value: "$(params.image_dest_url)"
        - name: new-tag
          value: "$(params.image_dest_tag)"
        - name: overlaypath
          value: "clusters/$(params.cluster)/overlays/prod"
      runAfter:
        - branch
      workspaces:
        - name: source
          workspace: git-source
    - name: commit
      taskRef:
        name: git
      runAfter:
        - patch
      workspaces:
        - name: source
          workspace: git-source
      params:
        - name: commands
          value: |
            "Current Directory"
            pwd
            ls -l
            echo "Home directory"
            echo $HOME
            ls $HOME

            if git diff --exit-code;
            then
              echo "No changes staged, skipping add/commit"
            else
              echo "Changes made, committing"
              echo "Changes made, committing"
              git config --global user.name "pipeline"
              git config --global user.email "pipelines@nomail.com"
              git add -u
              git commit -m 'Update image in git to $(params.image_dest_url):$(params.image_dest_tag) for production'
              echo "Running 'git push origin push-$(params.image_dest_tag)'"
              git push origin push-$(params.image_dest_tag)
            fi
    - name: prod-pr-deploy
      taskRef:
        name: task-create-pr
        kind: Task
      runAfter:
        - commit
      workspaces:
        - name: source
          workspace: git-source
      params:
        - name: title
          value: Update image to $(params.image_dest_tag)
        - name: body
          value: |-
            Please review the following links for compliance before accepting and merging the PR:

            1. [Quay Image Vulnerabilities](https://$(params.image_dest_url):$(params.image_dest_tag))
            2. [Advanced Cluster Security Image Vulnerabilities and Policies]($(params.acs_image_scan_results))
            3. [Sonarqube Results](http://$(params.sonarqube_host)/dashboard?id=product-catalog-$(params.app))