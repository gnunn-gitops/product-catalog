apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: push-prod-pr
spec:
  workspaces:
    - name: gitops-manifests
    - name: acs-central
      optional: true
  params:
    - name: git_revision
      type: string
      default: main
    - name: git_url
      type: string
      default: https://github.com/gnunn-gitops/product-catalog
    - name: git_source_url
      description: The URL of the repo containing the source code for the application, used to construct a link for code changes
    - name: image_dest_url
      type: string
      description: External registry location of image to push without tag
    - name: image_dest_tag
      type: string
      description: Tag of image to push to production
    - name: cluster
      type: string
      description: Cluster to push to
    - name: app
      type: string
      description: Either 'server' or 'client'
    - name: sonarqube_host
      type: string
      description: Hostname for sonarqube
      default: sonarqube-dev-tools.apps.hub.ocplab.com
  tasks:
    - name: variables
      taskRef:
        name: variables-from-k8s
      workspaces:
        - name: acs-central
          workspace: acs-central
    - name: get-image-digest
      taskRef:
        kind: Task
        params:
          - name: pathInRepo
            value: task/image-tag-to-digest/1.0/image-tag-to-digest.yaml
        resolver: git
      runAfter:
        - variables
      params:
        - name: image_dest_url
          value: $(params.image_dest_url)
        - name: image_dest_tag
          value: $(params.image_dest_tag)
    - name: clone
      taskRef:
        resolver: cluster
        params:
        - name: kind
          value: task
        - name: name
          value: git-clone
        - name: namespace
          value: openshift-pipelines
      runAfter:
        - get-image-digest
      workspaces:
        - name: output
          workspace: gitops-manifests
      params:
        - name: URL
          value: "$(params.git_url)"
        - name: REVISION
          value: "$(params.git_revision)"
        - name: DELETE_EXISTING
          value: "true"
    - name: branch
      taskRef:
        name: git
      runAfter:
        - clone
      workspaces:
        - name: source
          workspace: gitops-manifests
      params:
        - name: commands
          value: |
            git checkout -b push-$(params.image_dest_tag)
    - name: update-image
      taskRef:
        name: update-image
      runAfter:
        - branch
      params:
        - name: git_revision
          value: "push-$(params.image_dest_tag)"
        - name: path
          value: clusters/$(params.cluster)/overlays/prod
        - name: image
          value: "$(params.image_dest_url)"
        - name: image_tag
          value: $(params.image_dest_tag)
      workspaces:
        - name: gitops-manifests
          workspace: gitops-manifests
    - name: create-commit-list
      taskRef:
        name: create-commit-list
      runAfter:
        - update-image
      params:
        - name: deployment
          value: $(params.app)
        - name: namespace
          value: product-catalog-prod
        - name: image_tag
          value: $(params.image_dest_tag)
        - name: git_source_url
          value: $(params.git_source_url)
    - name: prod-pr-deploy
      taskRef:
        name: task-create-pr
        kind: Task
      runAfter:
        - create-commit-list
      workspaces:
        - name: source
          workspace: gitops-manifests
      when:
        - input: "$(tasks.update-image.results.image_updated)"
          operator: in
          values: ["true"]
      params:
        - name: title
          value: Update $(params.app) image to $(params.image_dest_tag)
        - name: body
          value: |-
            ## Security Checklist

            - [ ] [Quay Image Vulnerabilities](https://$(params.image_dest_url):$(params.image_dest_tag))
            - [ ] [Advanced Cluster Security Image Vulnerabilities and Policies](https://$(tasks.variables.results.acs_central_endpoint)/main/vulnerability-management/images/$(tasks.get-image-digest.results.image_digest))
            - [ ] [Sonarqube Results](https://$(params.sonarqube_host)/dashboard?id=product-catalog-$(params.app))

            ## Code Changes
            - [ ] $(tasks.create-commit-list.results.commit-list-message)
